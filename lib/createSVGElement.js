"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createSVGElement;

var _object_utils = require("./helpers/object_utils");

var _function_utils = require("./helpers/function_utils");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* istanbul ignore next */
var getParentFunctionByType = (0, _object_utils.createProxy)({
  string: function string(selector) {
    return document.querySelector(selector);
  }
}, _function_utils.identityFn);

function createSVGElement(type, svgParent, id, classNames) {
  var elem = document.createElementNS("http://www.w3.org/2000/svg", type);
  id && (elem.id = id);
  classNames && elem.setAttribute("class", classNames);
  svgParent && getParentFunctionByType[_typeof(svgParent)](svgParent).appendChild(elem);
  return elem;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVTVkdFbGVtZW50LnRzIl0sIm5hbWVzIjpbImdldFBhcmVudEZ1bmN0aW9uQnlUeXBlIiwic3RyaW5nIiwic2VsZWN0b3IiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpZGVudGl0eUZuIiwiY3JlYXRlU1ZHRWxlbWVudCIsInR5cGUiLCJzdmdQYXJlbnQiLCJpZCIsImNsYXNzTmFtZXMiLCJlbGVtIiwiY3JlYXRlRWxlbWVudE5TIiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTUEsdUJBQXVCLEdBQUcsK0JBQy9CO0FBQ0NDLEVBQUFBLE1BQU0sRUFBRSxnQkFBQ0MsUUFBRDtBQUFBLFdBQXNCQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUJGLFFBQXZCLENBQXRCO0FBQUE7QUFEVCxDQUQrQixFQUkvQkcsMEJBSitCLENBQWhDOztBQStEZSxTQUFTQyxnQkFBVCxDQUNkQyxJQURjLEVBRWRDLFNBRmMsRUFHZEMsRUFIYyxFQUlkQyxVQUpjLEVBS0Q7QUFDYixNQUFNQyxJQUFJLEdBQUdSLFFBQVEsQ0FBQ1MsZUFBVCxDQUF5Qiw0QkFBekIsRUFBdURMLElBQXZELENBQWI7QUFFQUUsRUFBQUEsRUFBRSxLQUFLRSxJQUFJLENBQUNGLEVBQUwsR0FBVUEsRUFBZixDQUFGO0FBQ0FDLEVBQUFBLFVBQVUsSUFBSUMsSUFBSSxDQUFDRSxZQUFMLENBQWtCLE9BQWxCLEVBQTJCSCxVQUEzQixDQUFkO0FBQ0FGLEVBQUFBLFNBQVMsSUFDUlIsdUJBQXVCLFNBQVFRLFNBQVIsRUFBdkIsQ0FBMENBLFNBQTFDLEVBQXFETSxXQUFyRCxDQUFpRUgsSUFBakUsQ0FERDtBQUdBLFNBQU9BLElBQVA7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVByb3h5IH0gZnJvbSBcIi4vaGVscGVycy9vYmplY3RfdXRpbHNcIjtcclxuaW1wb3J0IHsgaWRlbnRpdHlGbiB9IGZyb20gXCIuL2hlbHBlcnMvZnVuY3Rpb25fdXRpbHNcIjtcclxuXHJcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmNvbnN0IGdldFBhcmVudEZ1bmN0aW9uQnlUeXBlID0gY3JlYXRlUHJveHk8RnVuY3Rpb24+KFxyXG5cdHtcclxuXHRcdHN0cmluZzogKHNlbGVjdG9yOiBzdHJpbmcpID0+IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpLFxyXG5cdH0sXHJcblx0aWRlbnRpdHlGblxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU1ZHRWxlbWVudChcclxuXHR0eXBlOiBcInN2Z1wiLFxyXG5cdHN2Z1BhcmVudD86IG9wdG9uYWxTVkdPclN0cmluZyxcclxuXHRpZD86IG9wdG9uYWxTdHJpbmcsXHJcblx0Y2xhc3NOYW1lcz86IG9wdG9uYWxTdHJpbmdcclxuKTogU1ZHRWxlbWVudDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVNWR0VsZW1lbnQoXHJcblx0dHlwZTogXCJjaXJjbGVcIixcclxuXHRzdmdQYXJlbnQ/OiBvcHRvbmFsU1ZHT3JTdHJpbmcsXHJcblx0aWQ/OiBvcHRvbmFsU3RyaW5nLFxyXG5cdGNsYXNzTmFtZXM/OiBvcHRvbmFsU3RyaW5nXHJcbik6IFNWR0NpcmNsZUVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTVkdFbGVtZW50KFxyXG5cdHR5cGU6IFwiZWxsaXBzZVwiLFxyXG5cdHN2Z1BhcmVudD86IG9wdG9uYWxTVkdPclN0cmluZyxcclxuXHRpZD86IG9wdG9uYWxTdHJpbmcsXHJcblx0Y2xhc3NOYW1lcz86IG9wdG9uYWxTdHJpbmdcclxuKTogU1ZHRWxsaXBzZUVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTVkdFbGVtZW50KFxyXG5cdHR5cGU6IFwibGluZVwiLFxyXG5cdHN2Z1BhcmVudD86IG9wdG9uYWxTVkdPclN0cmluZyxcclxuXHRpZD86IG9wdG9uYWxTdHJpbmcsXHJcblx0Y2xhc3NOYW1lcz86IG9wdG9uYWxTdHJpbmdcclxuKTogU1ZHTGluZUVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTVkdFbGVtZW50KFxyXG5cdHR5cGU6IFwicGF0aFwiLFxyXG5cdHN2Z1BhcmVudD86IG9wdG9uYWxTVkdPclN0cmluZyxcclxuXHRpZD86IG9wdG9uYWxTdHJpbmcsXHJcblx0Y2xhc3NOYW1lcz86IG9wdG9uYWxTdHJpbmdcclxuKTogU1ZHUGF0aEVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTVkdFbGVtZW50KFxyXG5cdHR5cGU6IFwicG9seWdvblwiLFxyXG5cdHN2Z1BhcmVudD86IG9wdG9uYWxTVkdPclN0cmluZyxcclxuXHRpZD86IG9wdG9uYWxTdHJpbmcsXHJcblx0Y2xhc3NOYW1lcz86IG9wdG9uYWxTdHJpbmdcclxuKTogU1ZHUG9seWdvbkVsZW1lbnQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTVkdFbGVtZW50KFxyXG5cdHR5cGU6IFwicG9seWxpbmVcIixcclxuXHRzdmdQYXJlbnQ/OiBvcHRvbmFsU1ZHT3JTdHJpbmcsXHJcblx0aWQ/OiBvcHRvbmFsU3RyaW5nLFxyXG5cdGNsYXNzTmFtZXM/OiBvcHRvbmFsU3RyaW5nXHJcbik6IFNWR1BvbHlsaW5lRWxlbWVudDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVNWR0VsZW1lbnQoXHJcblx0dHlwZTogXCJyZWN0XCIsXHJcblx0c3ZnUGFyZW50Pzogb3B0b25hbFNWR09yU3RyaW5nLFxyXG5cdGlkPzogb3B0b25hbFN0cmluZyxcclxuXHRjbGFzc05hbWVzPzogb3B0b25hbFN0cmluZ1xyXG4pOiBTVkdSZWN0RWxlbWVudDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVNWR0VsZW1lbnQoXHJcblx0dHlwZTogU1ZHRWxlbWVudFR5cGVzLFxyXG5cdHN2Z1BhcmVudD86IG9wdG9uYWxTVkdPclN0cmluZyxcclxuXHRpZD86IG9wdG9uYWxTdHJpbmcsXHJcblx0Y2xhc3NOYW1lcz86IG9wdG9uYWxTdHJpbmdcclxuKTogU1ZHRWxlbWVudCB7XHJcblx0Y29uc3QgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIHR5cGUpO1xyXG5cclxuXHRpZCAmJiAoZWxlbS5pZCA9IGlkKTtcclxuXHRjbGFzc05hbWVzICYmIGVsZW0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgY2xhc3NOYW1lcyk7XHJcblx0c3ZnUGFyZW50ICYmXHJcblx0XHRnZXRQYXJlbnRGdW5jdGlvbkJ5VHlwZVt0eXBlb2Ygc3ZnUGFyZW50XShzdmdQYXJlbnQpLmFwcGVuZENoaWxkKGVsZW0pO1xyXG5cclxuXHRyZXR1cm4gZWxlbTtcclxufVxyXG4iXX0=